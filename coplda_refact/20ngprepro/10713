: mark 
subject : re : need help : line & area together 
originator : 
organization : ibm austin 
keyword : z-buffer , roundoff , line , area 
lines : 105 
david write : 
> ask help sticky problem involve unreasonably low 
> apparent precision , encounter 2 different 
> pex implementation . 
find discussion problem 
> resource lay hand e.g. faq , gaskins 's 
> _ _ , vendor ' documentation . 
> 
> ... 
> 
> problem solve eliminate minimize `` stitch '' 
> artifact result use 
> coplanar fill area . 
interpolate z value along line 
> differ slightly , due roundoff error , interpolate z value 
> across area , even endpoint line coincident 
> vertex area . 
, tossup whether 
> z-buffer allow line pixel area pixel display . 
> visually , result tend effect even though 
> line suppose solid . 
> 
> use apus , approach solution use two slightly 
> different pex view mapping transform , two view table entry , one 
> area one line . 
pex structure immediate - 
> mode output must organize one view table index always 
> effect area , always effect line . 

> result slight shift npc z coordinate line , 
> attempt bias tossup situation favor line . 
> 
> shift effect move front back clipping plane use 
> view table entry line hair `` backwards '' i.e. 
> smaller vrc z coordinate , compare position view 
> table entry use area . 
mean point transform 
> npc , z value slightly bigger come line 
> come area , thus accomplish desire bias . 
> 
> would expect z roundoff error cause problem amount 
> unit , entire dynamic range z-buffer , 
> typically 0 i.e. 16 24 bit z-buffer . 
> therefore , seem tiny fraction range z vrc 
> front back clip plane ought suffice reliably fix 
> stitching . 
> 
> fact , experience show shift much 0.003 
> 0.006 range . 
empirically , worst npc z 
> component slope surface high , i.e. appear 
> less edge-on viewer . 
8 9 bit 
> z-buffer dependable meaning ! 
amount great one 
> problem replace another : sometimes `` show '' 
> area suppose lie behind . 
> 
> observe problem hewlett-packard digital 
> workstation pex server , approximately degree . 
test 
> program demonstrate problem mit 5 . 
x implementation ; 
> version know compile run hp-ux system pex 
> 5.1 . 
> 
> open question : 
> 1 happen ? 
> -- configure pex view table wrongly ? 
> -- systematic difference z interpolation line 
> oppose area e.g. pixel center versus corner 
> could correct ? 
> -- pex implementor wantonly discard z precision 
> ? 
> -- something else ? 
> 2 ? 
> -- fix use view table allow better precision 
> ? 
> -- another approach take remove stitching 
> artifact ? 
> -- luck ? 
> 
ibm problem workstation . 
also 
shock first realize offset line fill 
16 bit assume 24 bit z buffer . 
seem huge , 
dynamic range . 
term seem bad . 

happen interpolation z totally linear , due 
mainly roundoff , believe . 
polygon planar z , 
like ruffles potato chip . 
ditto line . 

different value , `` ridge '' phase , result 
stitch effect . 
problem try draw 1 polygon 
right top another , different vertex . 
likely see 
smeared effect overlap . 
example : 
try polygon 1 : 
polygon 2 : 
implementation correct . 
fact , similar trick 
render primitive line polygon - surface 
line . 
without trick , line appear stitch , 
say . 
application draw independently , 
system smart automatically z shift , 
application must . 
discover . 
bravo ! 
note ibm ` ers : information give previously disclose 
proper channel give away new unpublished info . 
-- 
mark 
ibm - advanced workstations systems - graphics systems 
austin tx 
view opinion express herein necessarily ibm corp. 
