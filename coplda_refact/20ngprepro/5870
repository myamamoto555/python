: 
subject : cryptography faq - mathematical cryptology 
organization : crypt cabal 
lines : 203 
expire : 22 may 1993 gmt 
: 
: . 

summary : part 4 10 faq , mathematical cryptology . 
system . 
type attack brute-force , , 
plaintext , etc. . 
mathematical formulation cryptography . 
security 
one-time pad . 
: 
: 
: 
faq , part 4 : mathematical cryptology 
fourth ten part faq . 
part 
mostly independent , read first part rest . 
time send miss part mail , ask . 
note `` '' refer reference list last part . 
section faq available via anonymous ftp 
. 
xx . 
cryptography 
faq post newsgroup , , 
every 21 day . 
contents : 
mathematical term , cryptosystem ? 
attack ? 
advantage formulate mathematically ? 
one-time pad secure ? 
attack ? 
attack ? 
attack ? 
mathematical term , say brute-force attack ? 
attack ? 
entropy ? 
mathematical term , cryptosystem ? 
cryptosystem consist encryption system e 
decryption system d. encryption system e collection 
function , index `` key '' k , map set 
`` plaintext '' p set `` ciphertext '' c. similarly 
decryption system d collection function 
p p every plaintext p. , succesful decryption 
ciphertext plaintext accomplish use key 
index use corresponding encryption plaintext 
ciphertext . 
system , wherein key value use 
encrypt decrypt , also know `` symmetric '' . 
attack ? 
intuitive term passive attack cryptosystem method 
start information plaintext 
corresponding ciphertext unknown key , figure 
information plaintext . 
possible state 
mathematically mean . 
go . 
fix function f , g , h n variable . 
fix encryption system e , 
fix distribution plaintext key . 
attack e use g assume f give h probability p 
algorithm pair f , g input one output h , 
probability p compute h h , ... , , 
f f , ... , g g , ... , . 
note 
probability depend distribution vector k , , ... , . 
attack trivial `` pointless '' probability 
least p compute h h , ... , f f , ... , 
g g , ... , . 
, ... , range uniformly possible 
ciphertext , particular relation , ... , . 

word , attack trivial actually use encryption 
, ... , . 
attack call `` '' n 1 , `` '' 
n 2 , . 
advantage formulate mathematically ? 
basic cryptology never prove cryptosystem secure . 
read part 3 : keep say `` strong cryptosystem must 
property , property guarantee cryptosystem 
strong ! '' 
contrast , purpose mathematical cryptology precisely 
formulate , possible , prove statement cryptosystem 
strong . 
say , example , cryptosystem secure 
passive attack nontrivial attack system 
define slow practical . 
prove 
statement confidence cryptosystem resist 
passive cryptanalytic technique . 
reduce statement 
well-known unsolved problem still confidence 
cryptosystem easy break . 
part cryptology also amenable mathematical 
definition . 
point explicitly identify assumption 
make prove produce desire result . 

figure mean particular cryptosystem use 
properly : mean assumption valid . 
methodology useful cryptanalysis . 
cryptanalyst 
take advantage incorrect assumption . 
often try 
construct proof security system , see proof fail , 
use failure start point analysis . 
one-time pad secure ? 
definition , one-time pad cryptosystem 
plaintext , ciphertext , key string say byte string 
length m , p sum let 's say exclusive 
k p. 
easy prove mathematically _ _ nontrivial 
attack one-time pad , assume uniform 
distribution key . 
note assume uniform 
distribution plaintext . 
proof : let attack , 
i.e. , algorithm take two input f , g produce one output h , 
probability p h h p whenever f f p 
g g p i.e. , g g k + p . 
, distribution 
k uniform independent p , distribution k + p must also 
uniform independent p. also distribution c 
uniform independent p. hence probability exactly p 
h h p whenever f f p g g c , p c. thus 
trivial . 
hand one-time pad _ _ secure key k use 
one plaintext : i.e. , nontrivial 
attack . 
properly use key k must 
throw away one encryption . 
key also call `` pad '' ; 
explain name `` one-time pad . '' 
attack ? 
notation , attack one f 
constant . 
give information g , ... , 
n ciphertext , attack chance produce 
information h , ... , plaintext . 
attack trivial 
good chance produce h , ... , give 
g , ... , random , ... , . 
example , say g c c , say h p first bit p. 
easily write attack -- `` guess attack , '' simply 
guess h p 1 . 
attack trivial use 
ciphertext : fifty-fifty chance guess correctly 
matter . 
hand attack rsa 
produce one bit information p , 100 % success , use c. 
feed random c success rate drop 50 % . 

nontrivial attack . 
attack ? 
classic attack f , , 
g , , , h , depend . 
word , give two ciphertext one decryption 
, attack produce information 
decryption . 
note attack often define literature 
produce information key , pointless : 
cryptanalyst generally care key insofar let 
decrypt message . 
attack ? 
attack first increasingly impractical 
series _ active _ attack cryptosystem : attack 
cryptanalyst feed datum . 
attack fit 
model passive attack explain . 
anyway , 
attack let cryptanalyst choose plaintext 
look corresponding ciphertext , repeat figure 
decrypt message . 
absurd example sort 
attack `` attack '' `` attack . '' 
much important form active attack message corruption 
attack , attacker try change ciphertext 
way make useful change plaintext . 
many easy way throw kink attack : 
instance , automatically encrypt plaintext p 
, h , r , p , sequence number choose anew 
message , r random number , h one-way hash 
function . 
comma mean concatenation plus mean . 
mathematical term , say brute-force attack ? 
consider follow attack . 
give 
plaintext , ... , p _ n-1 ciphertext , ... , c _ n-1 . 
` re 
also give ciphertext . 
run every key k. find 
k every < n , print . 
n big enough one key work , attack succeed 
valid input time , produce correct result 
blue moon random input . 
thus nontrivial 
attack . 
problem slow many 
possible key . 
attack ? 
entropy ? 
say somebody use one-time pad -- choose key 
randomly uniformly message , suppose 
security proof . 
fact say know prefer key 
english word . 
cryptanalyst run english 
word possible key . 
attack often succeed , much 
faster brute-force search entire . 
measure bad key distribution calculate 
entropy . 
number e number `` real bit information '' 
key : cryptanalyst typically happen across key within 
2 ^ e guess . 
e define sum - , 
probability key k. 
